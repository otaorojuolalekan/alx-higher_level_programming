This module ``2-matrix_divided`` returns a new ``matrix``
whose elements are the rounded results of old ``matrix``
divided by the provided number - div.

=======================================================
A number of test cases are possible in this module:

# - matrix not a list
# - matrix not a list of lists.
# - elements of matrix not integers or floats
# - each row of matrix not same size
# - div not integer or float
# - div == ZERO
# - div overflow
# - div a float

##### ``matrix`` a list of lists #########

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 3)
   [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

##### ``matrix`` a list but not of lists #######

::

   >>> matrix = [14, 15, 16]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 3)
   Traceback (most recent call last):
      ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats

##### ``matrix`` rows not of equal length ##########

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 3)
   Traceback (most recent call last):
      ...
   TypeError: Each row of the matrix must have the same size

##### ``div`` equals zero ###########

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 0)
   Traceback (most recent call last):
      ...
   ZeroDivisionError: division by zero

##### elements of ``matrix`` not int or float ############

::

   >>> matrix = [
   ... [1, 'shit', 3],
   ... [4, 'got', 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 5)
   Traceback (most recent call last):
      ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats

##### None passed ############

::

   >>> matrix = [
   ... [None],
   ... [None]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 2)
   Traceback (most recent call last):
      ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats

##### elements contain floats ############

::

   >>> matrix = [
   ... [1.2, 4.5, 3.9],
   ... [4, 8.2, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 5)
   [[0.24, 0.9, 0.78], [0.8, 1.64, 1.2]]

##### ``div`` not integer or float ####

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 'whatever')
   Traceback (most recent call last):
      .....................****
   TypeError: div must be a number

#### single ``matrix`` argument

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix)
   Traceback (most recent call last):
   TypeError: matrix_divided() missing 1 required positional argument: 'div'


#### no ``matrix`` arguments

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided()
   Traceback (most recent call last):
   TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

#### ``div`` overflow

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 1234568901234567890)
   [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

#### ``matrix`` overflow

::

   >>> matrix = [
   ... [1234578901234578901234567890, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 1) # doctest: +ELLIPSIS
   [[1.234...e+27, 2.0, 3.0], [4.0, 5.0, 6.0]]

#### ``div`` negative

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, -1)
   [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

#### ``div`` nameerror

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, div)
   Traceback (most recent call last):
   NameError: name 'div' is not defined

#### ``div`` float

::

   >>> matrix = [
   ... [1, 2, 3],
   ... [4, 5, 6]
   ... ]
   >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   >>> matrix_divided(matrix, 2.5)
   [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]
   